{"ast":null,"code":"import _classCallCheck from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/src/applications/Wedding/components/potato/Potato.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { peelThePotato, doSomething, requestToDatabase } from \"./potatoActions.js\";\nimport { connect } from \"react-redux\"; // import { bindActionCreators } from \"redux\";\n\nexport var Potato =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Potato, _Component);\n\n  function Potato(props) {\n    var _this;\n\n    _classCallCheck(this, Potato);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Potato).call(this, props));\n\n    _this.sliceThePotato = function () {\n      var updatedFields = _this.props.skinColor === \"purple\" ? {\n        skinColor: \"brown\"\n      } : {\n        skinColor: \"purple\"\n      };\n\n      _this.props.dispatch(peelThePotato(updatedFields)); // this.props.peelThePotato(updatedFields);\n\n\n      var two = {\n        fire: \"water\"\n      };\n      doSomething(two);\n    };\n\n    _this.diceThePotato = function () {\n      var two = _this.props.fire === \"water\" ? {\n        fire: \"ice\"\n      } : {\n        fire: \"water\"\n      };\n      doSomething(two)(_this.props.dispatch);\n    };\n\n    return _this;\n  }\n\n  _createClass(Potato, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"this.props:\", this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Potato\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \">>> here's the POTATO\", React.createElement(\"button\", {\n        onClick: this.sliceThePotato,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"SLICE IT\"), React.createElement(\"button\", {\n        onClick: this.diceThePotato,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"DICE IT\"), Object.keys(this.props).map(function (prop) {\n        return React.createElement(\"div\", {\n          className: \"box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, prop);\n      }), React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.props.skinColor));\n    }\n  }]);\n\n  return Potato;\n}(Component);\nPotato.propTypes = {\n  // field1: PropTypes.bool,\n  // field2: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  // field3: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\n  // onSubmitForm: PropTypes.func,\n  peelThePotato: PropTypes.func,\n  doSomething: PropTypes.func,\n  skinColor: PropTypes.string,\n  numberOfEyes: PropTypes.number,\n  starchIndex: PropTypes.number // const { doSomething, peelThePotato, requestToDatabase } = actions;\n\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    skinColor: state.skinColor,\n    numberOfEyes: state.numberOfEyes,\n    starchIndex: state.starchIndex,\n    fire: state.fire\n  };\n}; // const mapDispatchToProps = (dispatch) => { // dispatch each of the potatoActions which need to update the store\n// \treturn {\n// \t\t...potatoActions,\n// \t\tsliceThePotato: dispatch(sliceThePotato),\n// \t\tpeelThePotato: updatedFields => dispatch(peelThePotato(updatedFields)),\n// \t}\n// }\n// export const mapDispatchToProps = dispatch => bindActionCreators( // dispatch each of the potatoActions which need to update the store\n// \t{\n// \t\tpeelThePotato,\n// \t\tdoSomething,\n// \t},\n// \tdispatch,\n// )\n// export default connect(mapStateToProps, mapDispatchToProps)(Potato);\n\n\nexport default connect(mapStateToProps)(Potato);","map":{"version":3,"sources":["/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/src/applications/Wedding/components/potato/Potato.js"],"names":["React","Component","PropTypes","peelThePotato","doSomething","requestToDatabase","connect","Potato","props","sliceThePotato","updatedFields","skinColor","dispatch","two","fire","diceThePotato","console","log","Object","keys","map","prop","propTypes","func","string","numberOfEyes","number","starchIndex","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { peelThePotato, doSomething, requestToDatabase } from \"./potatoActions.js\";\n\nimport { connect } from \"react-redux\";\n// import { bindActionCreators } from \"redux\";\n\n\nexport class Potato extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log(\"this.props:\", this.props);\n\t}\n\n\tsliceThePotato = () => {\n\n\t\tlet updatedFields = (this.props.skinColor === \"purple\")\n\t\t\t? { skinColor: \"brown\" }\n\t\t\t: { skinColor: \"purple\" }\n\n\t\tthis.props.dispatch(peelThePotato(updatedFields));\n\t\t// this.props.peelThePotato(updatedFields);\n\n\t\tlet two = { fire: \"water\" }\n\t\tdoSomething(two);\n\t}\n\n\tdiceThePotato = () => {\n\n\t\tlet two = (this.props.fire === \"water\") \n\t\t\t? { fire: \"ice\" } \n\t\t\t: { fire: \"water\" };\n\t\tdoSomething(two)(this.props.dispatch);\n\t}\n\n\n  render() {\n\t\n    return (\n        <div className=\"Potato\">\n        \t>>> here's the POTATO\n        \t<button onClick={this.sliceThePotato}>SLICE IT</button>\n        \t<button onClick={this.diceThePotato}>DICE IT</button>\n        \t{Object.keys(this.props).map(prop => (\n        \t\t<div className=\"box\">\n        \t\t\t{prop}\n        \t\t</div>\n        \t\t))}\n        \t<div className=\"box\">\n        \t\t{this.props.skinColor}\n        \t</div>\n        </div>\n    );\n  }\n}\n\nPotato.propTypes = {\n\t// field1: PropTypes.bool,\n  // field2: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  // field3: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\n  // onSubmitForm: PropTypes.func,\n\tpeelThePotato: PropTypes.func,\n\tdoSomething: PropTypes.func,\n\tskinColor: PropTypes.string,\n\tnumberOfEyes: PropTypes.number,\n\tstarchIndex: PropTypes.number, \n}\n\n// const { doSomething, peelThePotato, requestToDatabase } = actions;\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tskinColor: state.skinColor,\n\t\tnumberOfEyes: state.numberOfEyes,\n\t\tstarchIndex: state.starchIndex,\n\t\tfire: state.fire,\n\t}\n}\n\n// const mapDispatchToProps = (dispatch) => { // dispatch each of the potatoActions which need to update the store\n// \treturn {\n// \t\t...potatoActions,\n// \t\tsliceThePotato: dispatch(sliceThePotato),\n// \t\tpeelThePotato: updatedFields => dispatch(peelThePotato(updatedFields)),\n// \t}\n// }\n\n// export const mapDispatchToProps = dispatch => bindActionCreators( // dispatch each of the potatoActions which need to update the store\n// \t{\n// \t\tpeelThePotato,\n// \t\tdoSomething,\n// \t},\n// \tdispatch,\n// )\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Potato);\n\nexport default connect(mapStateToProps)(Potato);\n"]},"metadata":{},"sourceType":"module"}