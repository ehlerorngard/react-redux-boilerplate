{"ast":null,"code":"import _classCallCheck from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/src/applications/Wedding/components/potato/Potato.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport _peelThePotato from \"./potatoActions.js\";\nimport { connect } from \"react-redux\"; // const { doSomething } = potatoActions;\n\nvar Potato =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Potato, _Component);\n\n  function Potato(props) {\n    var _this;\n\n    _classCallCheck(this, Potato);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Potato).call(this, props));\n\n    _this.sliceThePotato = function () {\n      var updatedFields = {\n        skinColor: \"purple\"\n      };\n\n      _peelThePotato(updatedFields);\n    };\n\n    return _this;\n  }\n\n  _createClass(Potato, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Potato\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \">>> here's the POTATO\", React.createElement(\"button\", {\n        onClick: this.sliceThePotato,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"SLICE IT\"));\n    }\n  }]);\n\n  return Potato;\n}(Component);\n\nPotato.propTypes = {\n  // field1: PropTypes.bool,\n  // field2: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  // field3: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\n  // onSubmitForm: PropTypes.func,\n  peelThePotato: PropTypes.func,\n  doSomething: PropTypes.func,\n  skinColor: PropTypes.string,\n  numberOfEyes: PropTypes.number,\n  starchIndex: PropTypes.number // const { doSomething, peelThePotato, requestToDatabase } = actions;\n\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    skinColor: state.skinColor || null,\n    numberOfEyes: state.numberOfEyes || null,\n    starchIndex: state.starchIndex || null\n  };\n}; // const mapDispatchToProps = (dispatch) => { // dispatch each of the potatoActions which need to update the store\n// \treturn {\n// \t\t...potatoActions,\n// \t\tsliceThePotato: dispatch(sliceThePotato),\n// \t\tpeelThePotato: updatedFields => dispatch(peelThePotato(updatedFields)),\n// \t}\n// }\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  // dispatch each of the potatoActions which need to update the store\n  // ...potatoActions,\n  return {\n    peelThePotato: function peelThePotato() {\n      return dispatch(_peelThePotato());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Potato);","map":{"version":3,"sources":["/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/src/applications/Wedding/components/potato/Potato.js"],"names":["React","Component","PropTypes","peelThePotato","connect","Potato","props","sliceThePotato","updatedFields","skinColor","propTypes","func","doSomething","string","numberOfEyes","number","starchIndex","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA0B,oBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;IAEMC,M;;;;;AACL,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,gFAAMA,KAAN;;AADkB,UAQnBC,cARmB,GAQF,YAAM;AAEtB,UAAIC,aAAa,GAAG;AACnBC,QAAAA,SAAS,EAAE;AADQ,OAApB;;AAGAN,MAAAA,cAAa,CAACK,aAAD,CAAb;AACA,KAdkB;;AAAA;AAElB;;;;wCAEmB,CAEnB;;;6BAWS;AAEP,aACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEC;AAAQ,QAAA,OAAO,EAAE,KAAKD,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,CADJ;AAMD;;;;EA1BkBN,S;;AA6BrBI,MAAM,CAACK,SAAP,GAAmB;AAClB;AACC;AACA;AACA;AACDP,EAAAA,aAAa,EAAED,SAAS,CAACS,IALP;AAMlBC,EAAAA,WAAW,EAAEV,SAAS,CAACS,IANL;AAOlBF,EAAAA,SAAS,EAAEP,SAAS,CAACW,MAPH;AAQlBC,EAAAA,YAAY,EAAEZ,SAAS,CAACa,MARN;AASlBC,EAAAA,WAAW,EAAEd,SAAS,CAACa,MATL,CAYnB;;AAZmB,CAAnB;;AAcA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAClC,SAAO;AACNT,IAAAA,SAAS,EAAES,KAAK,CAACT,SAAN,IAAmB,IADxB;AAENK,IAAAA,YAAY,EAAEI,KAAK,CAACJ,YAAN,IAAsB,IAF9B;AAGNE,IAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,IAAqB;AAH5B,GAAP;AAKA,CAND,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AAAE;AACxC;AACA,SAAO;AACNjB,IAAAA,aAAa,EAAE;AAAA,aAAMiB,QAAQ,CAACjB,cAAa,EAAd,CAAd;AAAA;AADT,GAAP;AAGA,CALD;;AAOA,eAAeC,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport peelThePotato from \"./potatoActions.js\";\nimport { connect } from \"react-redux\";\n\n// const { doSomething } = potatoActions;\n\nclass Potato extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\tcomponentDidMount() {\n\n\t}\n\n\tsliceThePotato = () => {\n\n\t\tlet updatedFields = {\n\t\t\tskinColor: \"purple\"\n\t\t}\n\t\tpeelThePotato(updatedFields);\n\t}\n\n\n  render() {\n\t\n    return (\n        <div className=\"Potato\">\n        \t>>> here's the POTATO\n        \t<button onClick={this.sliceThePotato}>SLICE IT</button>\n        </div>\n    );\n  }\n}\n\nPotato.propTypes = {\n\t// field1: PropTypes.bool,\n  // field2: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  // field3: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\n  // onSubmitForm: PropTypes.func,\n\tpeelThePotato: PropTypes.func,\n\tdoSomething: PropTypes.func,\n\tskinColor: PropTypes.string,\n\tnumberOfEyes: PropTypes.number,\n\tstarchIndex: PropTypes.number, \n}\n\n// const { doSomething, peelThePotato, requestToDatabase } = actions;\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tskinColor: state.skinColor || null,\n\t\tnumberOfEyes: state.numberOfEyes || null,\n\t\tstarchIndex: state.starchIndex || null,\n\t}\n}\n\n// const mapDispatchToProps = (dispatch) => { // dispatch each of the potatoActions which need to update the store\n// \treturn {\n// \t\t...potatoActions,\n// \t\tsliceThePotato: dispatch(sliceThePotato),\n// \t\tpeelThePotato: updatedFields => dispatch(peelThePotato(updatedFields)),\n// \t}\n// }\n\nconst mapDispatchToProps = dispatch => { // dispatch each of the potatoActions which need to update the store\n\t// ...potatoActions,\n\treturn {\n\t\tpeelThePotato: () => dispatch(peelThePotato()),\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Potato);\n"]},"metadata":{},"sourceType":"module"}