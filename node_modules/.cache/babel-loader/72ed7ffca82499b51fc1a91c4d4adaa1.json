{"ast":null,"code":"// import \"./potatoActions.js\";\nimport requester from \"../../utils/requester.js\";\nexport var initialState = {\n  skinColor: \"red\"\n};\n\nfunction potatoReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"PEEL_THE_POTATO\":\n      console.log(\"we made it to the potatoReducer\");\n      return state.map(function (each) {\n        return Object.assign({}, state, action.payload); // <–– return new state\n      });\n\n    case \"DO_SOMETHING\":\n      return Object.assign({}, state, action.payload);\n\n    case \"REQ_TO_DATABASE\":\n      requester.editPotato(action.payload.id, action.payload.WHATEVER);\n      return Object.assign({}, state, action.payload);\n\n    default:\n      return state;\n  }\n}\n\nexport default potatoReducer;","map":{"version":3,"sources":["/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/src/applications/Wedding/components/potato/potatoReducer.js"],"names":["requester","initialState","skinColor","potatoReducer","state","action","type","console","log","map","each","Object","assign","payload","editPotato","id","WHATEVER"],"mappings":"AAAA;AACA,OAAOA,SAAP,MAAsB,0BAAtB;AAEA,OAAO,IAAMC,YAAY,GAAG;AAC3BC,EAAAA,SAAS,EAAE;AADgB,CAArB;;AAIP,SAASC,aAAT,GAA2C;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACC,aAAOJ,KAAK,CAACK,GAAN,CAAU,UAAAC,IAAI,EAAI;AACxB,eAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyBC,MAAM,CAACQ,OAAhC,CAAP,CADwB,CACyB;AACjD,OAFM,CAAP;;AAGF,SAAK,cAAL;AACE,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyBC,MAAM,CAACQ,OAAhC,CAAP;;AACF,SAAK,iBAAL;AACCb,MAAAA,SAAS,CAACc,UAAV,CAAqBT,MAAM,CAACQ,OAAP,CAAeE,EAApC,EAAwCV,MAAM,CAACQ,OAAP,CAAeG,QAAvD;AACC,aAAOL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyBC,MAAM,CAACQ,OAAhC,CAAP;;AACF;AACE,aAAOT,KAAP;AAZJ;AAcD;;AAED,eAAeD,aAAf","sourcesContent":["// import \"./potatoActions.js\";\nimport requester from \"../../utils/requester.js\";\n\nexport const initialState = {\n\tskinColor: \"red\",\n}\n\nfunction potatoReducer(state = [], action) {\n  switch (action.type) {\n    case \"PEEL_THE_POTATO\":\n    \tconsole.log(\"we made it to the potatoReducer\");\n      return state.map(each => {\n      \treturn Object.assign({}, state, action.payload)  // <–– return new state\n      }) \n    case \"DO_SOMETHING\":\n      return Object.assign({}, state, action.payload)\n    case \"REQ_TO_DATABASE\":\n    \trequester.editPotato(action.payload.id, action.payload.WHATEVER);\n      return Object.assign({}, state, action.payload)\n    default:\n      return state;\n  }\n}\n\nexport default potatoReducer;"]},"metadata":{},"sourceType":"module"}