{"ast":null,"code":"// import \"./potatoActions.js\";\nimport requester from \"../../utils/requester.js\";\nvar PEEL_THE_POTATO = \"PEEL_THE_POTATO\";\nexport default function potatoReducer(state, action) {\n  switch (action.type) {\n    case PEEL_THE_POTATO:\n      console.log(\"we made it to the potatoReducer\");\n      return Object.assign({}, state, action.payload);\n    // <–– return new state\n\n    case \"DO_SOMETHING\":\n      return Object.assign({}, state, action.payload);\n\n    case \"REQ_TO_DATABASE\":\n      requester.editPotato(action.payload.id, action.payload.WHATEVER);\n      return Object.assign({}, state, action.payload);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/src/applications/Wedding/components/potato/potatoReducer.js"],"names":["requester","PEEL_THE_POTATO","potatoReducer","state","action","type","console","log","Object","assign","payload","editPotato","id","WHATEVER"],"mappings":"AAAA;AACA,OAAOA,SAAP,MAAsB,0BAAtB;AAEA,IAAMC,eAAe,GAAG,iBAAxB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,eAAL;AACCK,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACC,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyBC,MAAM,CAACM,OAAhC,CAAP;AAAiD;;AACnD,SAAK,cAAL;AACE,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyBC,MAAM,CAACM,OAAhC,CAAP;;AACF,SAAK,iBAAL;AACCV,MAAAA,SAAS,CAACW,UAAV,CAAqBP,MAAM,CAACM,OAAP,CAAeE,EAApC,EAAwCR,MAAM,CAACM,OAAP,CAAeG,QAAvD;AACC,aAAOL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyBC,MAAM,CAACM,OAAhC,CAAP;;AACF;AACE,aAAOP,KAAP;AAVJ;AAYD","sourcesContent":["// import \"./potatoActions.js\";\nimport requester from \"../../utils/requester.js\";\n\nconst PEEL_THE_POTATO = \"PEEL_THE_POTATO\";\n\nexport default function potatoReducer(state, action) {\n  switch (action.type) {\n    case PEEL_THE_POTATO:\n    \tconsole.log(\"we made it to the potatoReducer\");\n      return Object.assign({}, state, action.payload)  // <–– return new state\n    case \"DO_SOMETHING\":\n      return Object.assign({}, state, action.payload)\n    case \"REQ_TO_DATABASE\":\n    \trequester.editPotato(action.payload.id, action.payload.WHATEVER);\n      return Object.assign({}, state, action.payload)\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}