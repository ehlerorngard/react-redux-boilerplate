{"ast":null,"code":"import _classCallCheck from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/src/applications/Wedding/components/potato/Potato.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { doSomething, peelThePotato, requestToDatabase } from \"./potatoActions.js\";\nimport { connect } from \"react-redux\";\n\nvar Potato =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Potato, _Component);\n\n  function Potato() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Potato);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Potato)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.sliceThePotato = function () {\n      var updatedFields = {\n        skinColor: \"purple\"\n      };\n      thing.peelThePotato(updatedFields);\n    };\n\n    return _this;\n  }\n\n  _createClass(Potato, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Potato\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \">>> here's the POTATO\", React.createElement(\"button\", {\n        onClick: this.sliceThePotato,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"SLICE IT\"));\n    }\n  }]);\n\n  return Potato;\n}(Component);\n\nPotato.propTypes = {// field1: PropTypes.bool,\n  // field2: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  // field3: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\n  // onSubmitForm: PropTypes.func,\n  // field22: \n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    skinColor: state.skinColor || null,\n    numberOfEyes: state.numberOfEyes || null,\n    starchIndex: state.starchIndex || null\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  // dispatch each of the potatoActions which need to update the store\n  return {\n    doSomething: doSomething,\n    peelThePotato: peelThePotato,\n    requestToDatabase: requestToDatabase\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Potato);","map":{"version":3,"sources":["/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/src/applications/Wedding/components/potato/Potato.js"],"names":["React","Component","PropTypes","doSomething","peelThePotato","requestToDatabase","connect","Potato","sliceThePotato","updatedFields","skinColor","thing","propTypes","mapStateToProps","state","numberOfEyes","starchIndex","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,iBAArC,QAA8D,oBAA9D;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAGMC,M;;;;;;;;;;;;;;;;;;UAMLC,c,GAAiB,YAAM;AAEtB,UAAIC,aAAa,GAAG;AACnBC,QAAAA,SAAS,EAAE;AADQ,OAApB;AAGAC,MAAAA,KAAK,CAACP,aAAN,CAAoBK,aAApB;AAEA,K;;;;;;;wCAXmB,CAEnB;;;6BAWS;AAEP,aACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEC;AAAQ,QAAA,OAAO,EAAE,KAAKD,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,CADJ;AAMD;;;;EAvBkBP,S;;AA0BrBM,MAAM,CAACK,SAAP,GAAmB,CAClB;AACC;AACA;AACA;AACD;AALkB,CAAnB;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAClC,SAAO;AACNJ,IAAAA,SAAS,EAAEI,KAAK,CAACJ,SAAN,IAAmB,IADxB;AAENK,IAAAA,YAAY,EAAED,KAAK,CAACC,YAAN,IAAsB,IAF9B;AAGNC,IAAAA,WAAW,EAAEF,KAAK,CAACE,WAAN,IAAqB;AAH5B,GAAP;AAKA,CAND;;AAQA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AAAE;AAC1C,SAAO;AACNf,IAAAA,WAAW,EAAXA,WADM;AAENC,IAAAA,aAAa,EAAbA,aAFM;AAGNC,IAAAA,iBAAiB,EAAjBA;AAHM,GAAP;AAKA,CAND;;AAQA,eAAeC,OAAO,CAACO,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CV,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { doSomething, peelThePotato, requestToDatabase } from \"./potatoActions.js\";\nimport { connect } from \"react-redux\";\n\n\nclass Potato extends Component {\n\n\tcomponentDidMount() {\n\n\t}\n\n\tsliceThePotato = () => {\n\n\t\tlet updatedFields = {\n\t\t\tskinColor: \"purple\"\n\t\t}\n\t\tthing.peelThePotato(updatedFields);\n\n\t}\n\n  render() {\n\n    return (\n        <div className=\"Potato\">\n        \t>>> here's the POTATO\n        \t<button onClick={this.sliceThePotato}>SLICE IT</button>\n        </div>\n    );\n  }\n}\n\nPotato.propTypes = {\n\t// field1: PropTypes.bool,\n  // field2: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  // field3: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\n  // onSubmitForm: PropTypes.func,\n\t// field22: \n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tskinColor: state.skinColor || null,\n\t\tnumberOfEyes: state.numberOfEyes || null,\n\t\tstarchIndex: state.starchIndex || null,\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => { // dispatch each of the potatoActions which need to update the store\n\treturn {\n\t\tdoSomething,\n\t\tpeelThePotato,\n\t\trequestToDatabase,\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Potato);\n"]},"metadata":{},"sourceType":"module"}