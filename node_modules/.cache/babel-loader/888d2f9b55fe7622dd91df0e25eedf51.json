{"ast":null,"code":"import _classCallCheck from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/src/applications/Wedding/components/potato/Potato.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport peelThePotato from \"./potatoActions.js\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\"; // const { doSomething } = potatoActions;\n\nexport var Potato =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Potato, _Component);\n\n  function Potato(props) {\n    var _this;\n\n    _classCallCheck(this, Potato);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Potato).call(this, props));\n\n    _this.sliceThePotato = function () {\n      var updatedFields = {\n        skinColor: \"purple\" // this.props.dispatch(peelThePotato(updatedFields));\n\n      };\n      peelThePotato(updatedFields);\n    };\n\n    return _this;\n  }\n\n  _createClass(Potato, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"this.props:\", this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Potato\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \">>> here's the POTATO\", React.createElement(\"button\", {\n        onClick: this.sliceThePotato,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"SLICE IT\"));\n    }\n  }]);\n\n  return Potato;\n}(Component);\nPotato.propTypes = {\n  // field1: PropTypes.bool,\n  // field2: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  // field3: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\n  // onSubmitForm: PropTypes.func,\n  peelThePotato: PropTypes.func,\n  doSomething: PropTypes.func,\n  skinColor: PropTypes.string,\n  numberOfEyes: PropTypes.number,\n  starchIndex: PropTypes.number // const { doSomething, peelThePotato, requestToDatabase } = actions;\n\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    skinColor: state.potato.skinColor || null,\n    numberOfEyes: state.potato.numberOfEyes || null,\n    starchIndex: state.potato.starchIndex || null\n  };\n}; // const mapDispatchToProps = (dispatch) => { // dispatch each of the potatoActions which need to update the store\n// \treturn {\n// \t\t...potatoActions,\n// \t\tsliceThePotato: dispatch(sliceThePotato),\n// \t\tpeelThePotato: updatedFields => dispatch(peelThePotato(updatedFields)),\n// \t}\n// }\n\n\nexport var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators( // dispatch each of the potatoActions which need to update the store\n  {\n    peelThePotato: peelThePotato\n  }, dispatch);\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Potato);","map":{"version":3,"sources":["/Users/ehlerorngard/Documents/code/web/orngard.com/orngard/frontend/src/applications/Wedding/components/potato/Potato.js"],"names":["React","Component","PropTypes","peelThePotato","connect","bindActionCreators","Potato","props","sliceThePotato","updatedFields","skinColor","console","log","propTypes","func","doSomething","string","numberOfEyes","number","starchIndex","mapStateToProps","state","potato","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CAEA;;AAEA,WAAaC,MAAb;AAAA;AAAA;AAAA;;AACC,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,gFAAMA,KAAN;;AADkB,UAUnBC,cAVmB,GAUF,YAAM;AAEtB,UAAIC,aAAa,GAAG;AACnBC,QAAAA,SAAS,EAAE,QADQ,CAGpB;;AAHoB,OAApB;AAIAP,MAAAA,aAAa,CAACM,aAAD,CAAb;AACA,KAjBkB;;AAAA;AAElB;;AAHF;AAAA;AAAA,wCAOqB;AACnBE,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKL,KAAhC;AACA;AATF;AAAA;AAAA,6BAqBW;AAEP,aACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEC;AAAQ,QAAA,OAAO,EAAE,KAAKC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,CADJ;AAMD;AA7BH;;AAAA;AAAA,EAA4BP,SAA5B;AAgCAK,MAAM,CAACO,SAAP,GAAmB;AAClB;AACC;AACA;AACA;AACDV,EAAAA,aAAa,EAAED,SAAS,CAACY,IALP;AAMlBC,EAAAA,WAAW,EAAEb,SAAS,CAACY,IANL;AAOlBJ,EAAAA,SAAS,EAAER,SAAS,CAACc,MAPH;AAQlBC,EAAAA,YAAY,EAAEf,SAAS,CAACgB,MARN;AASlBC,EAAAA,WAAW,EAAEjB,SAAS,CAACgB,MATL,CAYnB;;AAZmB,CAAnB;;AAcA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAClC,SAAO;AACNX,IAAAA,SAAS,EAAEW,KAAK,CAACC,MAAN,CAAaZ,SAAb,IAA0B,IAD/B;AAENO,IAAAA,YAAY,EAAEI,KAAK,CAACC,MAAN,CAAaL,YAAb,IAA6B,IAFrC;AAGNE,IAAAA,WAAW,EAAEE,KAAK,CAACC,MAAN,CAAaH,WAAb,IAA4B;AAHnC,GAAP;AAKA,CAND,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAInB,kBAAkB,EAAE;AACjE;AACCF,IAAAA,aAAa,EAAbA;AADD,GAD+D,EAI/DqB,QAJ+D,CAAtB;AAAA,CAAnC;AAOP,eAAepB,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CjB,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport peelThePotato from \"./potatoActions.js\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\n// const { doSomething } = potatoActions;\n\nexport class Potato extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\n\n\tcomponentDidMount() {\n\t\tconsole.log(\"this.props:\", this.props);\n\t}\n\n\tsliceThePotato = () => {\n\n\t\tlet updatedFields = {\n\t\t\tskinColor: \"purple\"\n\t\t}\n\t\t// this.props.dispatch(peelThePotato(updatedFields));\n\t\tpeelThePotato(updatedFields);\n\t}\n\n\n  render() {\n\t\n    return (\n        <div className=\"Potato\">\n        \t>>> here's the POTATO\n        \t<button onClick={this.sliceThePotato}>SLICE IT</button>\n        </div>\n    );\n  }\n}\n\nPotato.propTypes = {\n\t// field1: PropTypes.bool,\n  // field2: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  // field3: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\n  // onSubmitForm: PropTypes.func,\n\tpeelThePotato: PropTypes.func,\n\tdoSomething: PropTypes.func,\n\tskinColor: PropTypes.string,\n\tnumberOfEyes: PropTypes.number,\n\tstarchIndex: PropTypes.number, \n}\n\n// const { doSomething, peelThePotato, requestToDatabase } = actions;\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tskinColor: state.potato.skinColor || null,\n\t\tnumberOfEyes: state.potato.numberOfEyes || null,\n\t\tstarchIndex: state.potato.starchIndex || null,\n\t}\n}\n\n// const mapDispatchToProps = (dispatch) => { // dispatch each of the potatoActions which need to update the store\n// \treturn {\n// \t\t...potatoActions,\n// \t\tsliceThePotato: dispatch(sliceThePotato),\n// \t\tpeelThePotato: updatedFields => dispatch(peelThePotato(updatedFields)),\n// \t}\n// }\n\nexport const mapDispatchToProps = dispatch => bindActionCreators( // dispatch each of the potatoActions which need to update the store\n\t{\n\t\tpeelThePotato,\n\t},\n\tdispatch,\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Potato);\n"]},"metadata":{},"sourceType":"module"}